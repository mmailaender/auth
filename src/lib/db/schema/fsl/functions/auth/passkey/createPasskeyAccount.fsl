@role(server)
function createPasskeyAccount(credential: {id: String, userId: String, algorithmId: Long, publicKey: String, otp: String}, userData: {firstName: String, lastName: String, email: String, avatar: String | Null}): Account {
  let user = User.firstWhere(.emails!.includes(userData.email))

  if(user == null) {
    let verification = Verification.all().firstWhere(.email == userData.email && .otp == credential.otp)
    if(verification == null) {
      abort({
        code: "NO_VALID_VERIFICATION",
        message: "Please restart the verification process"
      });
    }
    
    let userId = newId()

    let newAccount = Account.create({
      user: User.byId(userId),
      passkey: {
        publicKey: credential.publicKey,
        algorithmId: credential.algorithmId,
        id: credential.id,
      }
    })
    
    let newUser = User.create({
        id: ID(credential.userId),
        firstName: userData.firstName,
        lastName: userData.lastName,
        avatar: userData.avatar,
        primaryEmail: userData.email,
        emails: [userData.email],
        accounts: [newAccount]
      })
    
    newAccount.update({
      user: newUser
    })
    
    verification!.delete()
    
    newAccount

    // If an user with this email is already existing, the user needs to be signed in to add a new account.
  } else if (user == Query.identity()){
    
    let account = Account.firstWhere(.user == user && .passkey != null)

    let account = if(account == null) {
      let account = Account.create({
        user: user!,
        passkey: {
          publicKey: credential.publicKey,
          algorithmId: credential.algorithmId,
          id: credential.id,
        }
      })
      
      let userAccounts = if(user!.accounts != null) {
        user!.accounts!.append(account)
      } else {
        [account]
      }
    
      user!.update({
        accounts: userAccounts 
      })

      account
    } else { 
      account
    }

    account!
  }
else {
    abort({
      code: "USER_ALREADY_EXISTS",
      message: "User already exists. Sign in first to add another Account."
    });
  }
}