@role(server)
function createSocialProviderAccount(firstName: String, lastName: String, email: String, avatar: String?, providerName: "Github" | "Facebook" | "Google", providerUserId: String, providerEmail: String): Account {
  let user = User.firstWhere(.emails!.includes(email))
  
  if(user == null) {
    let userId = newId()

    let newAccount = Account.create({
      user: User.byId(userId),
      socialProvider: {
        name: providerName,
        userId: providerUserId,
        email: providerEmail
      }
    })
    
    let newUser = User.create({
        id: userId,
        firstName: firstName,
        lastName: lastName,
        avatar: avatar,
        primaryEmail: email,
        emails: [email],
        accounts: [newAccount]
    })
    
    newAccount.update({
      user: newUser
    })
    
  } else if (user == Query.identity()){
    // If an user with this email is already existing, the user needs to be signed it to add a new account.
  
    let account = Account.firstWhere(.user == user && .socialProvider?.name == providerName)

    let account = if(account == null) {
      let account = Account.create({
        user: user!,
        socialProvider: {
          name: providerName,
          userId: providerUserId,
          email: providerEmail
        }
      })
      
      let userAccounts = if(user!.accounts != null) {
        user!.accounts!.append(account)
      } else {
        [account]
      }
    
      user!.update({
        accounts: userAccounts 
      })

      account
    } else { 
      account
    }

    account!
  }
else {
    abort({
      code: "USER_ALREADY_EXISTS",
      message: "User already exists. Sign in first to add another Account."
    });
  }
}