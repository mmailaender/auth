role role_organizationAdmin {
  privileges Organization {
    read {
      predicate ((org) => {
        if( Query.identity()!.activeOrganization != org ) {
          false
        } else {
          true
        }
      })
    }
    write {
      predicate ((old, new) => { 
        // User is only allowed to do actions in his activeOrganization
        if( Query.identity()!.activeOrganization != old) {
          false
        }

        // An admin can't change it's own role or a role of a higher priviliged person.
        if( old.roles.owner != new.roles.owner || !new.roles.admins.includes(Query.identity()) ) {
          false
        } else {
          true
        }
      })
    }
  }

  membership User {
    predicate ( (user) => {
      user.activeOrganization!.roles.admins!.includes(user)
    })
  }
}