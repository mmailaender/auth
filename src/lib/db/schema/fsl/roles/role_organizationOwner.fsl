role role_organizationOwner {
  privileges Organization {
    read {
      predicate ((org) => {
        if( Query.identity()!.activeOrganization != org ) {
          false
        } else {
          true
        }
      })
    }
    write {
      predicate ((old, new) => { 
        // User is only allowed to do actions in his activeOrganization
        if( Query.identity()!.activeOrganization != old) {
          false
        }

        // An owner can't change it's own role via a normal write operation. He needs to call the handover function. 
        if( old.roles.owner != new.roles.owner ) {
          false
        } else {
          true
        }
      })
    }
  }

  membership User {
    predicate ( (user) => {
      user.activeOrganization!.roles.owner == user
    })
  }
}